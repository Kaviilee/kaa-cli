{
  "root": true,
  "env": {
    "node": true
    "browser": true
  },
  "extends": [
    "airbnb",
    "airbnb-typescript",
    "prettier",
    "prettier/react",
    "prettier/@typescript-eslint"
  ],
  "plugins": ["eslint-comments", "unicorn", "react-hooks"],
  "rules": {
    "no-use-before-define": "off",
    "react/jsx-wrap-multilines": 0,
    "react/prop-types": 0,
    "react/forbid-prop-types": 0,
    "react/sort-comp": 1,
    "react/jsx-one-expression-per-line": 0,
    "generator-star-spacing": 0,
    "function-paren-newline": 0,
    "import/no-unresolved": [
      2,
      {
          "ignore": ["^@/", "^@@/", "^@alipay/bigfish/"],
          "caseSensitive": true,
          "commonjs": true
      },
    ],
    "import/order": "warn",
    "react/jsx-props-no-spreading": 0,
    "react/state-in-constructor": 0,
    "react/static-property-placement": 0,
    "jsx-a11y/no-noninteractive-element-interactions": 0,
    "jsx-a11y/click-events-have-key-events": 0,
    "jsx-a11y/no-static-element-interactions": 0,
    "jsx-a11y/anchor-is-valid": 0,
    "linebreak-style": 0,
    // Too restrictive, writing ugly code to defend against a very unlikely scenario: https://eslint.org/docs/rules/no-prototype-builtins
    "no-prototype-builtins": "off",
    "import/prefer-default-export": "off",
    "import/no-default-export": [0, "camel-case"],
    // Too restrictive: https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/destructuring-assignment.md
    "react/destructuring-assignment": "off",
    "react/jsx-filename-extension": "off",
    "sort-imports": 0,
    // Makes no sense to allow type inferrence for expression parameters, but require typing the response
    "@typescript-eslint/no-use-before-define": [
        "error",
        { "functions": false, "classes": true, "variables": true, "typedefs": true },
    ],
    "@typescript-eslint/explicit-function-return-type": [
        "off",
        { "allowTypedFunctionExpressions": true },
    ],
    "@typescript-eslint/camelcase": 0,
    "@typescript-eslint/no-var-requires": 0,
    // Common abbreviations are known and readable
    "unicorn/prevent-abbreviations": "off",
    "@typescript-eslint/explicit-member-accessibility": 0,
    "@typescript-eslint/interface-name-prefix": 0,
    "@typescript-eslint/no-non-null-assertion": 0,
    "@typescript-eslint/naming-convention": 0,
    "import/no-cycle": 0,
    "react/no-array-index-key": "warn",
    "react-hooks/rules-of-hooks": "error",
    "react/require-default-props": 0,
    "react/jsx-fragments": 0,
    // Conflict with prettier
    "arrow-body-style": 0,
    "arrow-parens": 0,
    "object-curly-newline": 0,
    "implicit-arrow-linebreak": 0,
    "operator-linebreak": 0,
    "eslint-comments/no-unlimited-disable": 0,
    "no-param-reassign": 2,
    "space-before-function-paren": 0,
    "import/extensions": 0
  }
}
